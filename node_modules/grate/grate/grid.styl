// Columns with Gutters
column(ratios = 1, offset = 0, cycle = 0, uncycle = 0)
  side = -get_layout_direction()
  column_widths = -get_column(ratios)
  margin_l = margin_last = 0
  margin_r = column_widths[1]
  
  unless offset == 0
    if offset < 0
      offset *= -1
      offset = -get_column(offset, column_widths[1])[0]
      margin_r = margin_last = offset + column_widths[1] * 2
    else
      offset = -get_column(offset, column_widths[1])[0]
      margin_l = offset + column_widths[1]
      
  @extend $cf
  float: side
  display: inline
  clear: none
  text-align: inherit
  padding-left: 0
  padding-right: 0
  width: (column_widths[0])%
  margin-{side}: (margin_l)%
  margin-{opposite-position(side)}: (margin_r)%
  
  if uncycle != 0
    &:nth-child({uncycle}n)
      margin-{opposite-position(side)}: (margin_r)%
      float: side
  if cycle != 0
    &:nth-child({cycle}n)
      margin-{opposite-position(side)}: (margin_last)%
      float: opposite-position(side)
  else
    &:last-child
      margin-{opposite-position(side)}: (margin_last)%

col = column

// Columns without Gutters
span(ratio = 1, offset = 0)
  side = -get_layout_direction()
  span_width = -get_span(ratio)
  margin_l = margin_r = 0
  
  unless offset == 0
    if offset < 0
      offset *= -1
      margin_r = -get_span(offset)
    else
      margin_l = -get_span(offset)
      
  @extend $cf
  float: side
  display: inline
  clear: none
  padding-left: 0
  padding-right: 0
  text-align: inherit
  width: (span_width)%
  margin-{side}: (margin_l)%
  margin-{opposite-position(side)}: (margin_r)%

// Source Ordering
shift(ratios = 0, col_or_span = column)
  side = -get_layout_direction()
  
  if side == right
    ratios = -replace_nth(ratios, 0, ratios[0] * -1)
    
  if col_or_span == column or col_or_span == col or col_or_span == c
    column_widths = -get_column(ratios)
    translate = column_widths[0] + column_widths[1]
  else
    translate = -get_span(ratios)
    
  position: relative
  left: (translate)%
  
unshift()
  position: static
  left: 0

// Edit Mode
edit()
  *
    background: #eee
    background: rgba(#000, 5%)

// Horizontal Centering Block Elements
center(max_width = 1410px, pad = 0)
  @extend $cf
  width: auto
  max-width: max_width
  float: none
  display: block
  margin-right: auto
  margin-left: auto
  padding-left: pad
  padding-right: pad

// Stacking/Unstacking Elements
stack(pad = 0, align = false)
  side = -get_layout_direction()
  display: block
  clear: both
  float: none
  width: 100%
  margin-left: auto
  margin-right: auto
  
  &:first-child
    margin-{side}: auto
      
  &:last-child
    margin-{opposite-position(side)}: auto
      
  if pad != 0
    padding-left: pad
    padding-right: pad

  if (align != false)
    if (align == center) or (align == c)
      text-align: center
    if (align == left) or (align == l)
      text-align: left
    if (align == right) or (align == r)
      text-align: right
        
unstack()
  side = -get_layout_direction()
  display: inline
  clear: none
  width: auto
  margin-left: 0
  margin-right: 0
  
  &:first-child
    margin-{side}: 0
      
  &:last-child
    margin-{opposite-position(side)}: 0
      
  if (grate-layout-direction == RTL)
    text-align: right
  else
    text-align: left

// Horizontal/Vertical/Both Alignment - Parent container needs position relative. IE9+
align(direction = both)
  position: absolute
  
  if (direction == horizontal) or (direction == h)
    left: 50%
    transform: translateX(-50%)
  else if (direction == vertical) or (direction == v)
    top: 50%
    transform: translateY(-50%)
  else
    top: 50%
    left: 50%
    transform: translate(-50%, -50%)

// Clearfix
cf()
  *zoom: 1
  &:before, &:after
    content: ''
    display: table
  &:after
    clear: both
    
$cf
  cf()
